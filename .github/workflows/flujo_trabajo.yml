name: flujo_trabajo

on:
  push:
    branches: [ main ]

jobs:
  build-react:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Detecta automáticamente el directorio que contiene package.json
      - name: Detect React app path
        id: detect
        shell: bash
        run: |
          set -e
          # Busca un package.json prioritizando raíz y carpetas comunes
          CANDIDATES=$(printf "%s\n" \
            "package.json" \
            "hackatonnasa/package.json" \
            $(git ls-files */package.json 2>/dev/null | sort -u))
          REACT_PATH=""
          for f in $CANDIDATES; do
            if [ -f "$f" ]; then
              REACT_PATH=$(dirname "$f")
              break
            fi
          done
          echo "react_path=$REACT_PATH" >> "$GITHUB_OUTPUT"
          if [ -z "$REACT_PATH" ]; then
            echo "No se encontró package.json en el repo."
          else
            echo "Se usará el path: $REACT_PATH"
          fi

      # Sale limpio si no hay proyecto Node (evita fallos tipo ENOENT)
      - name: Stop if no React app found
        if: ${{ steps.detect.outputs.react_path == '' }}
        run: |
          echo "No se encontró un proyecto React/Node en este repo. Nada que instalar/compilar."
          exit 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: ${{ steps.detect.outputs.react_path }}/package-lock.json

      - name: Install dependencies
        working-directory: ${{ steps.detect.outputs.react_path }}
        run: |
          if [ -f "package-lock.json" ]; then
            npm ci
          else
            npm install
          fi

      - name: Build
        working-directory: ${{ steps.detect.outputs.react_path }}
        run: npm run build --if-present

      # Ejemplo de uso del GITHUB_TOKEN (como tenías)
      - name: Use GITHUB_TOKEN
        run: |
          curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/user/repos
