name: Flujo_trabajo # nombre del flujo de trabajo

# evento que activa el flujo de trabajo 
on:
  push:
    branches:
      - main
# El flujo se ejecutará cada vez que haya un push (es decir, una actualización o un nuevo commit) a la rama main.

# configuración del trabajo
jobs:
  # Identificador del trabajo (job) dentro del flujo de trabajo.
  example-job:
    # El job se ejecutará en un runner con el sistema operativo Ubuntu en su última versión.
    runs-on: ubuntu-latest

    # Pasos del job
    steps:
      # Checkout del código
      - name: Checkout code
        uses: actions/checkout@v3
      # Este paso utiliza la acción oficial actions/checkout en su versión 3.
      # Clona el código fuente del repositorio en el runner para que pueda ser utilizado por otros pasos.

      # (Opcional) Configurar Node.js si tu proyecto lo usa
      - name: Setup Node.js
        if: ${{ hashFiles('**/package.json') != '' }}
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      # Este paso solo corre si existe package.json.

      # (Opcional) Instalar dependencias
      - name: Install dependencies
        if: ${{ hashFiles('**/package.json') != '' }}
        run: npm install

      # (Opcional) Ejecutar build si existe script de build
      - name: Build
        if: ${{ hashFiles('**/package.json') != '' }}
        run: npm run build --if-present

      # Uso del GITHUB_TOKEN
      - name: Use GITHUB_TOKEN
        # Ejecuta el comando curl para realizar una llamada a la API de GitHub.
        run: |
          curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
               -H "Accept: application/vnd.github.v3+json" \
               https://api.github.com/user/repos
# GITHUB_TOKEN se genera automáticamente para cada ejecución del flujo y tiene permisos predeterminados para interactuar con el repositorio.
# versión 3 de la API de GitHub. con esta estructura
